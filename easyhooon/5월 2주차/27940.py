# 농장은 총 n 층 제일 낮은 곳이 1층 높은 곳이 n 층
# 비를 맞는 층과 그 양을 확인할 수 있음
# 비는 M번 쏟아지며, i 번째 비가 오는 순간 1층 부터 t층이 동시에 빗물을 각각 ri 만큼 받게 됨
# 땅에 스며든 비는 증발하지 않음(마지막 비가 내린 직후 까지 누적됨)
# 농장의 각 층은 최대 k 만큼 빗물을 받아도 쓸려 내려가지 않음
# 만약 어떤 층에 누적된 빗물의 양이 K를 초과한다면 해당 층은 무너짐
# 비가 와서 무너지는 층이 동시에 여러 곳 발생할 수 있음
# 농장에 한 층이라도 무너지기 전에 가지를 모두 수확하려고 함, 몇번째 비가 온 직후 어떤 층이 무너지는지 예측
# 모든 비가 온 후 어떤 층도 무너지지 않으면 -1 을 출력
# 처음으로 무너지는 층이 발생할때, i 와 무너지는 층을 아무거나 하나 출력
import sys

si = sys.stdin.readline

# n <= 10^5
# m <= 10^6
# k <= 2 * 10^9
# 2 중 포문으로 풀이하면 시초
# 시간을 줄이는 방법(그리디, 애드 혹)
# 굳이 중간중간에 모든 배열을 다 갱신해줘야 되나, 입력값만으로 판단하면 되는것 아닌가?
# 범위바 1 ~ t 이므로 쨌든 1은 빗물을 받음 -> 1번으로 판단
n, m, k = map(int, si().split())
arr = [0] * (n + 1)

r_sum = 0
for i in range(1, m + 1):
    t, r = map(int, si().split())
    # for j in range(1, t + 1):
    #     arr[j] += r
    #     if arr[j] > k:
    #         print(i, j)
    #         exit(0)
    #print(arr)
    r_sum += r
    if r_sum > k:
        print(i, 1)
        exit(0)

print(-1)



